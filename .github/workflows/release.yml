# This file is maintained by velocitas CLI, do not modify manually. Change settings in .velocitas.json
# Copyright (c) 2022 Robert Bosch GmbH and Microsoft Corporation
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Release workflow

on:
  release:
    types: [published, edited]

jobs:
  initialize-matrix:
    runs-on: ubuntu-latest
    name: Setting up build matrix
    outputs:
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get matrix data
        id: export-deployment-matrix
        run: |
          MATRIX=$(cat ./app/AppManifest.json | tr '\n' ' ')

          echo "deployment-matrix=$MATRIX" >> $GITHUB_OUTPUT

  upload-images:
    name: "Upload image (${{ matrix.component.Name }})"
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs: initialize-matrix
    strategy:
      matrix:
        component: ${{ fromJson(needs.initialize-matrix.outputs.deployment-matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: get_version
        uses: battila7/get-version-action@v2

      - run: echo "Using VehicleApp version ${{ steps.get_version.outputs.version-without-v }} from tag"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: github-repository-name-case-adjusted
        name: Prepare repository name in lower case for docker upload.
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - name: Wait for Multi-Arch build to succeed
        uses: fountainhead/action-wait-for-check@v1.1.0
        with:
          checkName: build-image-multiarch / Building image (${{ matrix.component.Name }})
          token: ${{ secrets.GITHUB_TOKEN }}
          timeoutSeconds: 1200
          intervalSeconds: 20

      - name: Download builds from Build multiarch image workflow artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-multiarch-image.yml
          workflow_conclusion: success
          commit: ${{ github.sha }}
          path: ${{github.workspace}}

      - name: "${{ matrix.component.Name }} -- Publish release image to GHCR"
        working-directory: ${{github.workspace}}
        env:
          VAPP_IMAGE: ${{ matrix.component.Name }}-multiarch/${{ matrix.component.Name }}.tar
          VAPP_NAME: ${{ matrix.component.Name }}
          VAPP_VERSION: ${{ steps.get_version.outputs.version-without-v }}
          REGISTRY: "ghcr.io/${{steps.github-repository-name-case-adjusted.outputs.lowercase}}"
        run: |
          tag=$(echo docker://$REGISTRY/$VAPP_NAME:$VAPP_VERSION | tr '[:upper:]' '[:lower:]')
          echo "Copy vApp image $VAPP_IMAGE to '$tag'"
          skopeo copy --all  oci-archive:$VAPP_IMAGE "$tag"

      - name: ${{ matrix.component.Name }} -- Download CI artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          path: ./ci-artifacts

      - name: ${{ matrix.component.Name }} -- Upload assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./ci-artifacts/AppManifest/AppManifest.json
